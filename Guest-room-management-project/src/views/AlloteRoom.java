package views;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import views.Dashboard;
import views.DbConnection;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author jui
 */
public class AlloteRoom extends javax.swing.JFrame {

    public String roomNo[] = new String[500];
    public String roomGen[] = new String[500];
    public String roomPrice[] = new String[500];
    public String userId[] = new String[500];
    public String userName[] = new String[500];
    public String userGender[] = new String[500];

    /**
     * Creates new form AlloteRoom
     */
    public AlloteRoom() {
        initComponents();
        DbConnection dbinfo = new DbConnection();
        String dburl = dbinfo.dburl;
        String dbuser = dbinfo.dbuser;
        String dbuspass = dbinfo.dbuserpass;
        try ( Connection con = DriverManager.getConnection(dburl, dbuser, dbuspass)) {
            //here bauet_guestroom is database name, root is username and password
            //System.out.println("Database connected successfuly.");
            Statement stmt = con.createStatement();
            ResultSet rs1 = stmt.executeQuery("SELECT `id`, `gender`, `fee` FROM `rooms` WHERE `isEmpty`=0");
            int i = 0;
            while (rs1.next()) {

                //System.out.println("#"+rs1.getString(1)+"-for "+rs1.getString(2)+"-"+rs1.getString(3)+"/=");
                combRoomId.addItem("#" + rs1.getString(1) + "-for " + rs1.getString(2) + "-" + rs1.getString(3) + "/=");
//                lblRoomInfo.setText("#"+rs1.getString(1)+"-for "+rs1.getString(2)+"-"+rs1.getString(3)+"/=");
                roomNo[i] = rs1.getString(1);
                roomGen[i] = rs1.getString(2);
                roomPrice[i] = rs1.getString(3);
                i++;

            }
            i = 0;
            Statement stmt2 = con.createStatement();
            ResultSet rs2 = stmt2.executeQuery("SELECT `id`, `name`, `gender` FROM `users` WHERE `isAlloted`=0");
            System.out.println("i am here");
            while (rs2.next()) {
                combGuest.addItem("#" + rs2.getString(1) + "-" + rs2.getString(2) + "-" + rs2.getString(3));
                userId[i] = rs2.getString(1);
                userGender[i] = rs2.getString(3);
                userName[i] = rs2.getString(2);
                i++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(AlloteRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        combGuest = new javax.swing.JComboBox<>();
        combRoomId = new javax.swing.JComboBox<>();
        btnAllote = new javax.swing.JButton();
        lblRoomInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Allocate Room");
        setMinimumSize(new java.awt.Dimension(570, 300));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Fira Sans", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check-mark.png"))); // NOI18N
        jLabel1.setText("Allote Room");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 30, 530, 40);

        jLabel2.setFont(new java.awt.Font("Fira Sans", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Room");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(60, 100, 80, 22);

        jLabel3.setFont(new java.awt.Font("Fira Sans", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Guest");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(60, 150, 80, 22);

        combGuest.setFont(new java.awt.Font("Fira Sans", 0, 18)); // NOI18N
        combGuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combGuestActionPerformed(evt);
            }
        });
        getContentPane().add(combGuest);
        combGuest.setBounds(160, 150, 330, 28);

        combRoomId.setFont(new java.awt.Font("Fira Sans", 0, 18)); // NOI18N
        combRoomId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combRoomIdActionPerformed(evt);
            }
        });
        getContentPane().add(combRoomId);
        combRoomId.setBounds(160, 100, 330, 28);

        btnAllote.setFont(new java.awt.Font("Fira Sans", 0, 18)); // NOI18N
        btnAllote.setText("Allote");
        btnAllote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAlloteMouseClicked(evt);
            }
        });
        btnAllote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlloteActionPerformed(evt);
            }
        });
        getContentPane().add(btnAllote);
        btnAllote.setBounds(230, 200, 110, 40);

        lblRoomInfo.setFont(new java.awt.Font("Fira Sans", 2, 12)); // NOI18N
        getContentPane().add(lblRoomInfo);
        lblRoomInfo.setBounds(160, 130, 180, 0);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combGuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combGuestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combGuestActionPerformed

    private void btnAlloteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlloteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAlloteActionPerformed

    private void combRoomIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combRoomIdActionPerformed

    }//GEN-LAST:event_combRoomIdActionPerformed

    private void btnAlloteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAlloteMouseClicked
        // TODO add your handling code here:
        int roomIndex = combRoomId.getSelectedIndex();
        int guestIndex = combGuest.getSelectedIndex();
        if (roomGen[roomIndex].equals(userGender[guestIndex])) {
            DbConnection dbinfo = new DbConnection();
            String dburl = dbinfo.dburl;
            String dbuser = dbinfo.dbuser;
            String dbuspass = dbinfo.dbuserpass;
            try ( Connection con = DriverManager.getConnection(dburl, dbuser, dbuspass)) {
                Statement stmt = con.createStatement();
                // for update or insert data
                stmt.executeUpdate("UPDATE `rooms` SET `isEmpty` = '1', `current_guest` = '" + userId[guestIndex] + "' WHERE `rooms`.`id` = " + roomNo[roomIndex]);
                stmt.executeUpdate("UPDATE `users` SET `isAlloted` = '1' WHERE `users`.`id` = " + userId[guestIndex]);
                JOptionPane.showMessageDialog(null, "Room allocated successfully.", "Success!!", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } catch (SQLException ex) {
                Logger.getLogger(AlloteRoom.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            String usrGen = userGender[guestIndex];
            String romGen = roomGen[roomIndex];
            JOptionPane.showMessageDialog(null, "You are trying to allocate a " + romGen.toLowerCase() + " room to " + usrGen.toLowerCase() + " user!!", "Error!!", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_btnAlloteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlloteRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlloteRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlloteRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlloteRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlloteRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAllote;
    private javax.swing.JComboBox<String> combGuest;
    public javax.swing.JComboBox<String> combRoomId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblRoomInfo;
    // End of variables declaration//GEN-END:variables
}
